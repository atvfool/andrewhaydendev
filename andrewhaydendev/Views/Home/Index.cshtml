@model andrewhaydendev.Models.MainModel;
@{ ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["name"] = Model.Name;
    }

<!-- ======= Hero Section ======= -->
<section id="hero" class="d-flex flex-column justify-content-center">
    <div class="container" data-aos="zoom-in" data-aos-delay="100">
        <h1>@Model.Name</h1>
        <p>I'm <span class="typed" data-typed-items="@Model.Titles"></span></p>
        <div class="social-links">
            <a href="@Model.GitHubLink" class="github"><i class="bx bxl-github"></i></a>
            <a href="@Model.LinkedInLink" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            <a href="mailto:@Model.Email" class="mail"><i class="bx bx-mail-send"></i></a>
        </div>
    </div>
</section><!-- End Hero -->
<main id="main">
    <!-- ======= About Section ======= -->
    <section id="about" class="about">
        <div class="container" data-aos="fade-up">

            <div class="section-title">
                <h2>About</h2>
                <p>@Model.AboutBlurb</p>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <img src="assets/img/profile-img.jpg" class="img-fluid" alt="">
                </div>
                <div class="col-lg-8 pt-4 pt-lg-0 content">
                    <h3>@Model.AboutTitle</h3>
                    <p class="font-italic">
                        @Model.AboutStrengths
                    </p>
                    <div class="row">
                        <div class="col-lg-6">
                            <ul>
                                <li><i class="icofont-rounded-right"></i> <strong>Birthday:</strong> @Model.Birthday.ToString("MMMM dd, yyyy")</li>
                                <li><i class="icofont-rounded-right"></i> <strong>Website:</strong> @Model.Website</li>
                                <li><i class="icofont-rounded-right"></i> <strong>City:</strong> @Model.CityState</li>
                            </ul>
                        </div>
                        <div class="col-lg-6">
                            <ul>
                                <li><i class="icofont-rounded-right"></i> <strong>Age:</strong> @((int)((DateTime.Now - Model.Birthday).Days / 365.25))</li>
                                <li><i class="icofont-rounded-right"></i> <strong>Email:</strong> <a href="mailto:@Model.Email">@Model.Email</a></li>
                                <li><i class="icofont-rounded-right"></i> <strong>Freelance:</strong> @(Model.FreelanceAvailable ? "Available" : "Not Available")</li>
                            </ul>
                        </div>
                    </div>
                    <p>
                        @Model.AboutAfterBlurb
                    </p>
                </div>
            </div>

        </div>
    </section><!-- End About Section -->
    <!-- ======= Facts Section ======= -->
    <section id="facts" class="facts">
        <div class="container" data-aos="fade-up">

            <div class="section-title">
                <h2>Facts</h2>
                <p>@Model.FactsBlurb</p>
            </div>

            <div class="row">
                <div class="col-lg-3 col-md-6">
                    <div class="count-box">
                        <i class="icofont-database"></i>
                        <span data-toggle="counter-up">@Model.FactsDatabases</span>
                        <p>More Than Databases Maintained</p>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 mt-5 mt-md-0">
                    <div class="count-box">
                        <i class="icofont-document-folder"></i>
                        <span data-toggle="counter-up">@Model.FactsProjects</span>
                        <p>Projects</p>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 mt-5 mt-lg-0">
                    <div class="count-box">
                        <i class="icofont-code-alt"></i>
                        <span data-toggle="counter-up">@Model.FactsHoursOfCode.ToString("#,##0")</span>
                        <p>Hours Of Code</p>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 mt-5 mt-lg-0">
                    <div class="count-box">
                        <i class="icofont-computer"></i>
                        <span data-toggle="counter-up">@Model.FactsRunningPCs</span>
                        <p>Computers currently running</p>
                    </div>
                </div>

            </div>

        </div>
    </section><!-- End Facts Section -->
    <!-- ======= Skills Section ======= -->
    <section id="skills" class="skills section-bg">
        <div class="container" data-aos="fade-up">

            <div class="section-title">
                <h2>Skills</h2>
                <p>
                    @Model.SkillsBlurb
                </p>
            </div>

            <div class="row skills-content">

                @{ 
                    string skills = "<div class=\"col-lg-6\">\n\t";
                    for (int i = 0; i < Model.Skills.Count; i += 1)
                    {
                        skills += "<div class=\"progress\"><span class=\"skill\">" + Model.Skills[i].SkillName + " <i class=\"val\">" + Model.Skills[i].SkillPercent.ToString() + "%</i></span><div class=\"progress-bar-wrap\"><div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"" + Model.Skills[i].SkillPercent.ToString() + "\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div></div></div>\n";

                        if ((i + 1) % 3 == 0) // every 3rd record we want to create a new column group
                        {
                            skills += "</div>\n";
                            skills += "<div class=\"col-lg-6\">\n\t";
                        }
                    }
                    skills += "</div>\n";
                    WriteLiteral(skills);
                    }


            </div>

        </div>
    </section><!-- End Skills Section -->
    <!-- ======= Resume Section ======= -->
    <section id="resume" class="resume">
        <div class="container" data-aos="fade-up">

            <div class="section-title">
                <h2>Resume</h2>
                <p></p>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <h3 class="resume-title">Sumary</h3>
                    <div class="resume-item pb-0">
                        <h4>@Model.Name</h4>
                        <p><em>@Model.ResumeBlurb</em></p>
                        <ul>
                            <li>@Model.CityState</li>
                            <li>@Model.Phone</li>
                            <li><a href="mailto:@Model.Email">@Model.Email</a></li>
                        </ul>
                    </div>

                    <h3 class="resume-title">Education</h3>
                    @foreach (ResumeModel resume in Model.Resume.Where(x => x.IsEducation == true))
                    {

                <div class="resume-item">
                    <h4>@resume.Header</h4>
                    <h5>@resume.Years</h5>
                    <p><em>@resume.Name, @resume.CityState</em></p>
                    @foreach (Resume_LineItems lineItem in resume.LineItems.OrderBy(x=>x.Order))
                    {
                        <p>@lineItem.Text</p>
                    }

                </div>}

                </div>
                <div class="col-lg-6">
                    <h3 class="resume-title">Professional Experience</h3>
                    @foreach (ResumeModel resume in Model.Resume.Where(x => x.IsEducation == false).OrderByDescending(x=>x.Order))
                    {
                        <div class="resume-item">
                            <h4>@resume.Header</h4>
                            <h5>@resume.Years</h5>
                            <p><em>@resume.Name, @resume.CityState </em></p>
                            <ul>
                                @foreach (Resume_LineItems lineItem in resume.LineItems.OrderBy(x => x.Order))
                                {
                                    <li>@lineItem.Text</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            </div>

        </div>
    </section><!-- End Resume Section -->
    <!-- ======= Services Section ======= -->
    <section id="projects" class="projects">
        <div class="container" data-aos="fade-up">

            <div class="section-title">
                <h2>Projects</h2>
                <p>Below are some of the personal projects I work on. Most don't have any real world value but I do like to tinker with them to work on new skills.</p>
            </div>
            <div id="loading" class="loading text-center">LOADING</div>
            <div class="row ProjectsHere">

            </div>

        </div>
    </section><!-- End Services Section -->
</main>
@section Scripts{
    <script type="text/javascript">
        var page = 0,
            inCallback = false,
            isReachedScrollEnd = false;

        var url = "@Url.Action("GetProjects", "Home")";

        $(document).ready(loadProjectData(url));

        var scrollHandler = function () {
            if (isReachedScrollEnd == false &&
                ($(document).scrollTop() <= $(document).height() - $(window).height())) {
                loadProjectData(url);
            }
        }

        function loadProjectData(loadMoreRowsUrl) {
            if (page > -1 && !inCallback) {
                inCallback = true;
                page++;
                $("div#loading").show();

                $.ajax({
                    type: 'GET',
                    url: loadMoreRowsUrl,
                    data: "pageNum=" + page,
                    success: function (data, textstatus) {
                        if (data != '') {
                            $(".ProjectsHere").append(data);
                        }
                        else {
                            page = -1;
                        }

                        inCallback = false;
                        $("div#loading").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
            }
        }
    </script>
}